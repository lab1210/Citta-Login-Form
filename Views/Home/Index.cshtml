@model CittaLogin.Models.LoginModel
@{
    ViewData["Title"] = "Login Form";
}
<div class="max-h-screen flex flex-col bg-gradient-to-r from-blue-500 via-cyan-500 to-teal-500">
    <!-- Add this right before your form closes -->
    <div class="flex justify-end mt-4">
        <button type="button" id="simulateErrors"
            class="text-xs bg-red-500/20 text-red-100 px-3 py-1 rounded hover:bg-red-500/30 transition">
            Simulate Errors
        </button>
    </div>
    <form class="flex flex-col items-center justify-center h-screen font-[Poppins] sm:p-5 p-5">
        <div class="flex  items-center mb-5">
            <div class="w-14 h-14">
                <img src="@Model.ProfileImagePath" class="w-full h-full" />
            </div>
            <p class="text-white text-lg font-[500]">@Model.CompanyName</p>

        </div>

        <!-- Login Box -->
        <div class="px-8 py-6  bg-white/20 w-full max-w-md backdrop-blur-sm  border border-white/30 shadow-lg">
            <p class="font-[500] text-center mb-5 text-xl text-white">Sign in</p>
            <div class="flex flex-col gap-5 mb-3">
                <!-- Email Input -->
                <div class="flex flex-col gap-1">
                    <label class="font-[400] text-xs text-white/80" for="Email">Email or mobile phone number</label>
                    <div class="relative">
                        <input type="text" asp-for="Email"
                            class="w-full text-sm p-3 border border-white/30 rounded-lg bg-white/10 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-transparent transition-all">
                        <svg class="absolute right-3 top-3.5 h-4 w-4 text-[#F58324]/90" fill="none" viewBox="0 0 24 24"
                            stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                        </svg>
                    </div>
                </div>

                <!-- Password Input -->
                <div class="flex flex-col gap-1">
                    <div class="flex justify-between">
                        <label class="font-[400] text-xs text-white/80" for="Email">Your password</label>
                        <button type="button" id="togglePassword"
                            class="flex items-center gap-2 text-white/70 hover:text-white transition">
                            <i id="eyeIcon" data-lucide="eye-off" class="w-4 h-4"></i>
                            <span id="toggleText" class="text-xs">Show</span>
                        </button>
                    </div>
                    <div class="relative">
                        <input type="password" asp-for="Password" id="passwordField"
                            class="w-full text-sm p-3 border border-white/30 rounded-lg bg-white/10 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-transparent transition-all">
                        <svg class="absolute right-3 top-3.5 h-4 w-4 text-[#F58324]/90" fill="none" viewBox="0 0 24 24"
                            stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Login Button -->
            <div class="mb-5">
                <button
                    class="rounded-sm bg-[#F58324] text-white font-[500] w-full p-2 hover:bg-[#F58324]/90  transition shadow-md hover:shadow-lg">
                    Log in
                </button>
            </div>

            <!-- Forgot Password -->
            <div class="flex justify-end">
                <a asp-action="ForgotPassword"
                    class="text-xs underline underline-offset-2 text-white hover:text-[#F58324]/90 transition">
                    Forgot Your password?
                </a>
            </div>
        </div>
    </form>

    <!-- Footer -->
    <div class="flex justify-end items-center p-2">
        <p class="text-white text-sm ">
            Powered by
        </p>
        <div class="w-20 h-8">
            <img src="~/Image/logo.png" class="w-full h-full" />
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('simulateErrors').addEventListener('click', function () {
            // Add error class to inputs
            document.querySelector('input[name="Email"]').classList.add('border-red-400');
            document.querySelector('input[name="Password"]').classList.add('border-red-400');

            // Create error messages
            const emailError = document.createElement('div');
            emailError.className = 'text-xs text-red-300 mt-1 flex items-center gap-1';
            emailError.innerHTML = `
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                            Please enter a valid email address
                                        `;

            const passwordError = document.createElement('div');
            passwordError.className = 'text-xs text-red-300 mt-1 flex items-center gap-1';
            passwordError.innerHTML = `
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                            Password must be at least 6 characters
                                        `;

            // Add general error message
            const generalError = document.createElement('div');
            generalError.className = 'mb-4 p-3 bg-red-500/20 text-red-100 rounded-lg text-sm flex items-center gap-2';
            generalError.innerHTML = `
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                            </svg>
                                            <span>Invalid login credentials</span>
                                        `;

            // Insert errors into DOM
            document.querySelector('input[name="Email"]').after(emailError);
            document.querySelector('input[name="Password"]').after(passwordError);
            document.querySelector('.font-[500].text-center').after(generalError);

            // Remove errors after 3 seconds
            setTimeout(() => {
                document.querySelector('input[name="Email"]').classList.remove('border-red-400');
                document.querySelector('input[name="Password"]').classList.remove('border-red-400');
                emailError.remove();
                passwordError.remove();
                generalError.remove();
            }, 3000);
        });

        // Keep your existing password toggle functionality
        document.getElementById('togglePassword').addEventListener('click', function () {
            const passwordField = document.getElementById('passwordField');
            const eyeIcon = document.getElementById('eyeIcon');
            const toggleText = document.getElementById('toggleText');

            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                eyeIcon.setAttribute('data-lucide', 'eye');
                toggleText.textContent = 'Hide';
            } else {
                passwordField.type = 'password';
                eyeIcon.setAttribute('data-lucide', 'eye-off');
                toggleText.textContent = 'Show';
            }
            lucide.createIcons();
        });
    </script>
}